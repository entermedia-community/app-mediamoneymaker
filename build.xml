<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="default" name="app-mediamoneymaker">

  <target name="default" depends="clean,  source, update-dependencies, compile, junit, jar,  war"/>
  <target name="dependency" depends="default"/>
   
    <property name="appname" value="${ant.project.name}"/>
    <property name="org" value="OpenEdit, Inc."/>
    <property name="src" location="${basedir}/src"/>
	<property name="testsrc" location="${basedir}/test"/>
    <property name="lib" location="${basedir}/lib"/>
    <property name="etc" location="${basedir}/etc"/>
    <property name="build" location="${basedir}/build"/>
    <property name="compiled" location="${build}/compiled"/>
    <property name="wardir" location="${build}/wartmp"/>
    <property name="webapp" location="${basedir}/webapp"/>
	<property name="webinf" location="${webapp}/WEB-INF"/>
	<property name="branch" value="dev_" />


	<!-- 
		========================================================================
		Anthill build server properties.  These properties will be passed in
		by anthill when this script is executed on the build server.
		
			- "version" is set by the version adapter
			- "deployDir" is set by anthill.publish.dir
		========================================================================
	--> 
	<property environment="env"/>
	 	<property name="version"  value="${env.BUILD_NUMBER}"/>
  	<property name="deployDir" location="deploy"/>
  	
  	<!-- A convenience variable for documentation output -->
  	<property name="versionDir" location="${deployDir}/builds/"/>
  	<property name="versionedApp" value="${appname}-${version}"/>

  <target name="clean">
     <delete dir="${build}"/>
     <delete dir="${wardir}"/>
  </target>
  <target name="source"> 
	<mkdir dir="${deployDir}/builds/" />	
  	<zip destfile="${deployDir}/builds/${appname}-${version}-src.zip"  basedir="." excludes="deploy/**, build/**" />
  </target>

	<target name="update-dependencies" >
		<!-- EDITOR -->
	    <mkdir dir="${build}"/>
	    <mkdir dir="${wardir}/WEB-INF/" />
		<get dest="${build}/install.xml" src="http://dev.entermediasoftware.com/jenkins/job/${branch}entermedia-server/lastSuccessfulBuild/artifact/deploy/install.xml"/>
		<ant antfile="${build}/install.xml" inheritAll="false" dir="${wardir}/WEB-INF/" target="default"/> 

		
		
		
			<copy todir="${wardir}" preservelastmodified="true">
					<fileset dir="${webapp}">
						<include name="store/*.*" />
						<include name="store/products/**" />
						<include name="store/configuration/store.*" />
						<include name="store/configuration/authorize.*" />
						<include name="media/catalogs/store/**" />
						<include name="ecommerce/**" />

					</fileset>
				</copy>
				<copy todir="${wardir}/WEB-INF/base/">
					<fileset dir="${webapp}/WEB-INF/base">
						<include name="store/**" />
					</fileset>
				</copy>
		
		
  </target>
  
  <target name="compile" depends="clean">
    <mkdir dir="${compiled}"/>
    <mkdir dir="${wardir}/WEB-INF/lib/"/>
    
	<copy todir="${compiled}">
		<fileset dir="${src}">
		  <include name="*.xml"/>
		</fileset>
	</copy>

    <javac debug="true" destdir="${compiled}" srcdir="${src}" source="1.5" target="1.5">
      <classpath>
        <fileset dir="${lib}">
          <include name="*.jar"/>
          <include name="compile/*.jar"/>
        </fileset>
        <fileset dir="${wardir}/WEB-INF/lib/">
            <include name="*.jar"/>
         </fileset>
      </classpath>
      <include name="**"/>
    </javac>
  </target>
  
  	<!-- 
		========================================================================
		Jar classes for the main app, excluding unit tests.
		========================================================================
	-->	  
	<target name="jar" depends="compile">
		<mkdir dir="${versionDir}"/>
		<jar jarfile="${versionDir}/${appname}-${version}.jar" basedir="${compiled}" >
			<manifest>
		    	<attribute name="Built-By" value="${user.name}"/>
			    <attribute name="Implementation-Title" value="${appname}"/>
			    <attribute name="Implementation-Version" value="${version}"/>
			    <attribute name="Implementation-Vendor" value="${org}"/>
		    </manifest>
		</jar>
  </target>
    
    
  <target name="junit">
  	
    <javac debug="true" destdir="${compiled}" srcdir="${testsrc}" source="1.5" target="1.5">
      <classpath>
        <fileset dir="${lib}">
          <include name="*.jar"/>
          <include name="compile/*.jar"/>
        </fileset>
        <fileset dir="${wardir}/WEB-INF/lib/">
            <include name="*.jar"/>
          </fileset>
      </classpath>
      <include name="**"/>
    </javac>

  	
  	
  	<property name="report" location="${deployDir}"/>
    <mkdir dir="${report}"/> 
  	<echo>JUnit report is located: ${report}/junit.xml</echo>
	
  	<junit haltonfailure="true" showoutput="true" printsummary="true" fork="true" maxmemory="256m">
  		<sysproperty key="oe.root.path" value="${wardir}"/>
  	  <classpath>
       <fileset dir="${lib}">
        <include name="**/*.jar"/>
      </fileset>
      <fileset dir="${wardir}/WEB-INF/lib/">
        <include name="*.jar"/>
      </fileset>
  	  	
      <dirset dir="${compiled}">
        <include name="**"/>
      </dirset>
    </classpath>
  		<test name="com.openedit.modules.cart.AllTests" outfile="./junit" todir="${report}">
  			<formatter type="xml"/>
  		</test>
  	</junit>
  </target>
  
    

  	<!-- 
		========================================================================
		Create WAR
		========================================================================
	-->	
  <target name="war" >
	
	  
	  <war warfile="${versionDir}/${appname}.war" webxml="${webinf}/web.xml" basedir="${wardir}">
  		<manifest>
	    	<attribute name="Built-By" value="${user.name}"/>
		    <attribute name="Implementation-Title" value="${appname}"/>
		    <attribute name="Implementation-Version" value="${version}"/>
		    <attribute name="Implementation-Vendor" value="${org}"/>
	    </manifest>
    	<lib dir="${versionDir}">
	       <include name="${appname}-${version}.jar"/>
	    </lib>

		<lib dir="${lib}/">
			<include name="*.jar"/>
		</lib>

	  </war>

 	<copy file="${etc}/install.xml" 
    tofile="${deployDir}/install.xml"/>

 	<copy file="${etc}/install.js" 
    tofile="${deployDir}/install.js"/>

	 	<copy file="${versionDir}/${appname}.war" 
	        tofile="${deployDir}/ROOT.war"/>
	
		<mkdir dir="${deployDir}/builds" />
		    
  </target>
  
 
</project>
