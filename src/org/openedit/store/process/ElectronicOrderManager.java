/* Generated by Together */

package org.openedit.store.process;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import org.apache.lucene.document.Document;
import org.dom4j.Element;
import org.openedit.store.Product;
import org.openedit.store.Store;
import org.openedit.store.StoreException;

import com.openedit.OpenEditException;
import com.openedit.page.Page;
import com.openedit.page.manage.PageManager;
import com.openedit.users.User;
import com.openedit.util.XmlUtil;

public class ElectronicOrderManager {

	protected PageManager fieldPageManager;
	protected Map fieldSecurityMap;

	public PageManager getPageManager() {
		return fieldPageManager;
	}

	public void setPageManager(PageManager inPageManager) {
		fieldPageManager = inPageManager;
	}

	public void addUserPermission(User inUser, Store store, Product inProduct, String inPermission) throws StoreException {
		String users = inProduct.getProperty(inPermission);
		if(users == null){
			users = inUser.getUserName();
			
		}
		else if (!users.contains(inUser.getUserName())) {
			users = users.concat(" ");
			users = users.concat(inUser.getUserName());
		}
		inProduct.setProperty(inPermission, users);
		store.saveProduct(inProduct);
	}

	public void removeUserPermission(User inUser, Store store, Product inProduct, String inPermission) throws StoreException {
		String users = inProduct.getProperty(inPermission);
		if (users.contains(inUser.getUserName())) {
			users.replaceAll(inUser.getUserName(), " ");
		}
		
		inProduct.setProperty(inPermission, users);
		store.saveProduct(inProduct);
	}

	public Map getPermissions(Store inStore) throws OpenEditException {

		if (fieldSecurityMap == null) {
			fieldSecurityMap = new HashMap();
			String catalogId = inStore.getCatalogId();
			Page page = getPageManager().getPage("/" + catalogId + "/data/storepermissions.xml");
			Element rootElement = new XmlUtil().getXml(page.getReader(), page.getCharacterEncoding());
			for (Iterator iterator = rootElement.elementIterator(); iterator.hasNext();) {
				Element current = (Element) iterator.next();
				String id = current.attributeValue("id");
				String text = current.attributeValue("description");
				fieldSecurityMap.put(id, text);
			}
			
		}
		return fieldSecurityMap;

	}

	public boolean checkPermission(Document doc, User inUser, String inString) {
		return false;
		
	}

}
