package orderhistory;

import java.text.SimpleDateFormat
import java.util.Date;
import java.util.Iterator;

import org.dom4j.Element
import org.openedit.Data
import org.openedit.data.Searcher
import org.openedit.data.SearcherManager
import org.openedit.entermedia.MediaArchive
import org.openedit.util.DateStorageUtil
import org.openedit.money.Money
import org.openedit.store.CartItem
import org.openedit.store.CreditPaymentMethod
import org.openedit.store.PaymentMethod
import org.openedit.store.Price;
import org.openedit.store.PriceSupport
import org.openedit.store.PriceTier;
import org.openedit.store.Store
import org.openedit.store.Product
import org.openedit.store.InventoryItem
import org.openedit.store.orders.Order
import org.openedit.store.orders.OrderState
import org.openedit.store.util.MediaUtilities
import org.openedit.store.orders.OrderArchive
import org.openedit.store.orders.OrderId
import org.openedit.store.orders.Shipment
import org.openedit.store.orders.ShipmentEntry
import org.openedit.store.orders.Refund
import org.openedit.store.orders.RefundItem
import org.openedit.store.orders.RefundState

import com.openedit.WebPageRequest

import org.openedit.event.WebEvent;

import com.openedit.hittracker.HitTracker
import com.openedit.hittracker.ListHitTracker
import com.openedit.hittracker.SearchQuery
import com.openedit.page.Page
import com.openedit.page.manage.PageManager
import com.openedit.util.XmlUtil

import groovy.util.slurpersupport.GPathResult

public init(){
	log.info("---- START Append Order History ----");
	
	WebPageRequest inReq = context;
	MediaArchive archive = inReq.getPageValue("mediaarchive");
	WebEvent webevent = inReq.getPageValue("webevent");
	if (webevent == null)
	{
		log.info("No webevent found, exiting");
		return;
	}
	Store store = inReq.getPageValue("store");
	String orderid = webevent.get("orderid");
	Order order = store.getOrderSearcher().searchById(orderid);
	if (order == null){
		log.info("Error: order \"$orderid\" does not exist, exiting");
		return;
	}
	String userid = "";
	String type = webevent.get("type");//automatic or userinput
	if ("userinput".equals(type)){
		userid = webevent.get("userid");
	}
	String state = webevent.get("state");
	if (state == null)
	{
		log.info("Error: state is not defined for order history associated with \"$orderid\", exiting");
		return;
	}
	Date now = new Date();
	if ("opened".equals(state))
	{
		appendOrderHistory(archive,order.getDate(),order.getId(),state,type,userid,"","","");
	}
	else if ("orderplaced".equals(state))
	{
		appendOrderHistory(archive,now,order.getId(),state,type,userid,"","","");
	}
	else if ("shippingnoticereceived".equals(state) || "fullyshipped".equals(state) || "shippingupdatedmanually".equals(state))
	{
		String shipmentid = webevent.get("shipmentid");//waybill
		appendOrderHistory(archive,now,order.getId(),state,type,userid,"","",shipmentid);
	}
	else if ("invoicereceived".equals(state)) //invoicereceived
	{
		String invoiceid = webevent.get("invoiceid");
		appendOrderHistory(archive,now,order.getId(),state,type,userid,invoiceid,"","");
	} 
	else if ("itemsrefunded".equals(state)) //itemsrefunded
	{
		String refundid = webevent.get("refundid");//transactionid
		appendOrderHistory(archive,now,order.getId(),state,"automatic","","",refundid,"");
	}
	else
	{
		//generatededi, sendtoedi,
		appendOrderHistory(archive,now,order.getId(),state,"automatic","","","","");
	}
	log.info("---- END Append Order History ----");
}

public void appendInvoiceRecieved(MediaArchive archive, String inOrderId, Date inDate, String inInvoiceId)
{
	appendOrderHistory(archive,inDate,inOrderId,"invoicereceived","automatic","",inInvoiceId,"","");
}

public void appendItemRefunded(MediaArchive archive, String inOrderId, Date inDate, String inTransactionId)
{
	appendOrderHistory(archive,inDate,inOrderId,"itemsrefunded","automatic","","",inTransactionId,"");
}

public void appendOrderHistory(MediaArchive archive, Date date, String orderid, String state, String type, String user, String invoice, String refund, String shipment)
{
	Searcher historysearcher = archive.getSearcher("detailedorderhistory");
	Data data = historysearcher.createNewData();
	data.setProperty("orderid",orderid);
	data.setProperty("state",state);
	data.setProperty("entrytype",type);
	data.setProperty("note","Generated by WebEvent, "+context.getDateTime(new Date()));
	data.setProperty("userid",user);
	data.setProperty("invoiceid",invoice);
	data.setProperty("refundid",refund);
	data.setProperty("shipmentid",shipment);
	data.setProperty("date",DateStorageUtil.getStorageUtil().formatForStorage(date));
	historysearcher.saveData(data, null);
}

init();